gnome-tweaks
	打开拓展操作
date 显示当前系统的时间和日期
df	显示磁盘驱动器当前可用空间
pwd	显示当前工作目录
ls 实现多文件查询	只需在文件后面多个文件
	-a  列出所有的文件-包含隐藏文件
	-l	使用长格式显示结果
	-s	按照大小排序
	-r	按照相反顺序排序
file file-name	会命令打印出文件内容的简短说明
less 查询文件内容
	-b 后翻一页
	-spacebar(空格) 前翻一页
	-箭头	前一行/后一行
	-q	退出

通配符
	*	匹配多个字符    包括0和1
	？	匹配任一个字符	不包括0
	[char] 匹配任意一个字符集中的字符
		[A-Z] / [a-z] / [0-9]
	[!char] 匹配任意一个不属于字符集中的字符
	[[:class:]]	匹配任意一个属于制定字符类中的字符
		[:alnum:]	匹配任意一个字母或数字
		[:alpha:]	匹配任意一个字母
		[:digit:]	匹配任意一个数字
		[:lower:]	匹配任意一个小写字母
		[:upper:]	匹配任意一个大写字母
			例如：
				[abc]*	以abc中的任一开头的任一文件
mkdir 创建目录

cp
	-a	复制文件和目录及其属性，包括所有权和权限
	-i	在覆盖一个已存在的文件之前会提示用户确认
	-r	递归复制目录及其内容
	-u	只复制不存在的文件或者是更新文件
	-v	复制文件，显示信息性消息

mv
	-i	在覆盖一个已存在的文件之前会提示用户确认
	-u	只覆盖不存在的文件或者是更新文件
	-v	移动文件，显示信息性消息

rm
	-i	删除一个已存在的文件前，提示用户确认
	-r	递归删除目录
	-f	忽略不存在的文件并无需提示确认
	-v	删除文件时显示信息性确认

in	创建链接
	硬链接：一个文件的别名，直接指向文件的实际位置
		in file	link
	符号链接：类似与windows的快捷方式
		in	-s	item	link

type []	显示命令的类型
	type command     /command是想要查看的命令名
which []	显示可指行程序的位置
help  [] 	获得shell内置命令的帮助文档
	--help 许多可执行性都支持这个选项
	man	大多数可执行程序都会有一个 man page的正式文档
apropos	[]  显示合适的命令
whatis	[]  显示命令的简要描述
info	[]	显示程序的info条目
alias 使用别名创建自己的命令
	alias foo="cd /usr; ls; cd-"
	创建一个foo别名的命令，但在关闭shell的时候会被删掉

标准输入：重定向
	1.	A > B 意味着把A的输入作为B的输出 (输出到文件中)
	2.	特殊用法：  > V.txt 新建V.txt 若是存在V.txt则会清空V.txt内的数据

	>> 添加到文件结尾
	标准错误重定向：
		文件描述符：
			标准输入文件 0
			标准输出文件 1
			标准错误文件 2
		eg：
			ls -l /bin/usr 2 > ls-srror.txt		会将标准错误文件输入到后置文件中
			ls -l /bin/usr &> ls-output.txt 会把标准输出和标准错误都重定向到指定文件

	cat -合并文件
		cat命令读取一个文件或者多个文件，并把它们复制到标准输出文件中，可以多个文件合并为一个文件，

	管道：
		一个命令的输出作为另一个命令的输入
		ls -lh | less   就是一个管道的例子，less分页的显示该目录下的文件
		过滤器
			ls -lh | sort | less	先排序后进行less输出
		忽略重复的行
			ls -lh	| uniq | sort | less   先去重后排序，然后用less输出
		打印行数、字数和字节数 (word count)
			wc linux.txt
		grep	打印匹配行/ 查找匹配文本
			ls -lh	| uniq | sort | grep zip	在列出的文件中查找文件名包含zip的文件
		head/tail	打印文件的开头部分/结尾部分
			默认是打印10行，例如head打印前十行，tail打印后十行
			可以通过 -n来自定义打印的行数
				head -n 5 linux.txt
		tee		读取标准输入，指定输出到文件中，然后在标准输出到后面的命令
			ls -lh | tee a.txt | grep tmd	先把ls -lh 的标准输出文件a.txt中，然后grep tmd的文本
	
echo	显示一行文本
	echo *	[*]是文本匹配，那会输出ls类似效果
	echo D*	可以使用类似文本通配符
	echo .*	可以只显示隐藏文件
	~ 	如果用在一个单词的开头，那么它将被扩展为指定用户的主目录名；如果没有指定用户名，那扩展为当前用户的主目录。
	echo	$((2 + 2))  算术扩展
	花括号扩展
		echo Number_{1..5}
			Number_1 Number_2 Number_3 Number_4 Number_5
		echo {Z..A}
			Z Y X ...... A
		echo a{A{1,2},B{3,4}}b
			aA1b aA2b aB3b aB4b
		mkdir {2009..2011}-0{1..9} {2009..2011}-{10..12}
			2009-01 ...... 2009-09 ...... 2009-12
			2010-01
			2011-01
	参数扩展
		echo $USER	输出tmd(tmd，嘎嘎嘎嘎嘎嘎)
	转义字符   \

history	搜索历史命令
	history | grep /usr/bin
	可以使用感叹号可以直接调用
		!55
	
权限
	文件类型-所有者权限-组权限-其他用户权限
	文件类型：
		-	普通文件
		d	目录文件
		l	符号链接，对于符号链接，剩下的文件属性始终是rwxrwxrwx，它是个伪属性值。
		c	字符设备文件，以字节流形式处理数据的设备，
		b	块设备文件	表示文件类型表示以数据块方式处理数据的设备
	
	权限属性：
		r	允许打开和读取文件
		w	允许写入或者截短文件，不允许重命名或者删除文件。是否能重命名和删除文件由目录权限决定
		x	允许把文件当作程序一样执行，用脚本语言写的程序文件必须被设置可读，以便能被执行。
	chmod：	更改文件模式 >8进制
		-	0
		x	1
		w	2
		r	4
	添加权限：
		u	user的缩写，文件或目录的所有者
		g	文件所属群组
		o	others的缩写，表示其他所有用户
		a	all的缩写，是‘a’，‘g’，‘o’三者的组合
		实例：
			u+x	为文件所有者添加可执行权限
			u-x 删除文件所有者的可执行权限
	
进程
	ps	查看ps命令查看进程信息
		ps x 反映系统运行情况的更大视图。

		进程状态 stat
			R	运行状态。进程正在运行或准备运行
			S	睡眠状态，进程不在运行。等待键盘输入或者收到网络报文
			D	不可中断的睡眠状态。	进程等待I/O操作。
			T	暂停状态，	状态被指示暂停
			Z	僵尸进程，子进程被终止，但是还没有被父进程彻底释放掉
			<	高优先级进程。分配更多的CPU时间。
			N	低优先级进程

	top	动态查看进程信息
		h	帮助
		q	退出

	&	使进程后台运行 在命令后加上&
	kill + 进程号

 /usr/share/applications/
 ~/.local/share/applications
 是应用程序的快捷键文件夹,可以制定项删除：